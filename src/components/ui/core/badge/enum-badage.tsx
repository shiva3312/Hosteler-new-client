//Copyright (c) Shivam Chaurasia - All rights reserved. Confidential and proprietary.
import {
  AddressType,
  BloodGroup,
  BreakfastCategory,
  CasteCategory,
  DeviceType,
  MealCategory,
  MealStatus,
  MealType,
  MenuCategory,
  MenuType,
  MessStatus,
  Religion,
  ScheduleStatus,
  ScheduleType,
  SnackCategory,
  Unit,
  UserStatus,
} from '@/interfaces/enums';

import { createBadgeComponent } from './generic-badge';

const enums = {
  MealStatus: {
    enumObj: MealStatus,
    colorMap: {
      [MealStatus.Active]: 'green',
      [MealStatus.Inactive]: 'gray',
      [MealStatus.Disabled]: 'red',
    },
  },
  MealType: {
    enumObj: MealType,
    colorMap: {
      [MealType.Vegetarian]: 'green',
      [MealType.NonVegetarian]: 'red',
      [MealType.Vegan]: 'yellow',
      [MealType.AllEater]: 'blue',
      [MealType.Eggetarian]: 'orange',
    },
  },
  UserStatus: {
    enumObj: UserStatus,
    colorMap: {
      [UserStatus.Active]: 'green',
      [UserStatus.Inactive]: 'gray',
      [UserStatus.Disabled]: 'red',
      [UserStatus.Banned]: 'black',
    },
  },
  ScheduleStatus: {
    enumObj: ScheduleStatus,
    colorMap: {
      [ScheduleStatus.Ideal]: 'blue',
      [ScheduleStatus.Inprogress]: 'orange',
      [ScheduleStatus.Pending]: 'yellow',
      [ScheduleStatus.Failed]: 'red',
      [ScheduleStatus.Completed]: 'green',
      [ScheduleStatus.Cancelled]: 'gray',
    },
  },
  ScheduleType: {
    enumObj: ScheduleType,
    colorMap: {
      [ScheduleType.Daily]: 'blue',
      [ScheduleType.Weekly]: 'green',
      [ScheduleType.Monthly]: 'purple',
      [ScheduleType.Yearly]: 'orange',
      [ScheduleType.OneTime]: 'yellow',
      [ScheduleType.Custom]: 'gray', // Custom cron expression
    },
  },
  MessStatus: {
    enumObj: MessStatus,
    colorMap: {
      [MessStatus.Open]: 'green',
      [MessStatus.Closed]: 'red',
      [MessStatus.UnderMaintenance]: 'yellow',
      [MessStatus.Renovation]: 'orange',
      [MessStatus.TemporarilyClosed]: 'gray',
      [MessStatus.PermanentlyClosed]: 'black',
      [MessStatus.NotAvailable]: 'purple',
      [MessStatus.ComingSoon]: 'blue',
    },
  },
  MenuCategory: {
    enumObj: MenuCategory,
    colorMap: {
      [MenuCategory.Regular]: 'blue',
      [MenuCategory.Special]: 'purple',
      [MenuCategory.Seasonal]: 'orange',
      [MenuCategory.Festive]: 'green',
      [MenuCategory.Custom]: 'yellow',
    },
  },
  Unit: {
    enumObj: Unit,
    colorMap: {
      [Unit.Gram]: 'blue',
      [Unit.Kilogram]: 'green',
      [Unit.Milligram]: 'yellow',
      [Unit.Milliliter]: 'orange',
      [Unit.Liter]: 'purple',
      [Unit.Cup]: 'pink',
      [Unit.Teaspoon]: 'gray',
      [Unit.Tablespoon]: 'red',
      [Unit.Piece]: 'blue',
      [Unit.Slice]: 'green',
      [Unit.Unit]: 'yellow',
      [Unit.Packet]: 'orange',
      [Unit.Can]: 'purple',
      [Unit.Bottle]: 'pink',
      [Unit.Box]: 'gray',
      [Unit.Serving]: 'red',
      [Unit.Plate]: 'blue',
      [Unit.Bowl]: 'green',
      [Unit.Loaf]: 'yellow',
      [Unit.Bar]: 'orange',
      [Unit.Scoop]: 'purple',
    },
  },
  MenuType: {
    enumObj: MenuType,
    colorMap: {
      [MenuType.Breakfast]: 'orange',
      [MenuType.Lunch]: 'blue',
      [MenuType.Dinner]: 'purple',
      [MenuType.Snack]: 'yellow',
    },
  },
  MealCategory: {
    enumObj: MealCategory,
    colorMap: {
      [MealCategory.Dal]: 'orange',
      [MealCategory.GravyVeg]: 'blue',
      [MealCategory.DryVeg]: 'purple',
      [MealCategory.Bread]: 'yellow',
      [MealCategory.Rice]: 'green',
      [MealCategory.Salad]: 'pink',
      [MealCategory.Dessert]: 'red',
      [MealCategory.Beverage]: 'gray',
      [MealCategory.Snack]: 'orange',
      [MealCategory.Soup]: 'blue',
      [MealCategory.Appetizer]: 'purple',
      [MealCategory.Pickle]: 'yellow',
      [MealCategory.Chutney]: 'green',
      [MealCategory.Raita]: 'pink',
      [MealCategory.Curry]: 'red',
      [MealCategory.StirFry]: 'gray',
      [MealCategory.Stew]: 'orange',
      [MealCategory.Other]: 'blue',
    },
  },
  BreakfastCategory: {
    enumObj: BreakfastCategory,
    colorMap: {
      [BreakfastCategory.Cereal]: 'blue',
      [BreakfastCategory.Porridge]: 'orange',
      [BreakfastCategory.Bread]: 'yellow',
      [BreakfastCategory.Pancake]: 'purple',
      [BreakfastCategory.Waffle]: 'pink',
      [BreakfastCategory.EggDish]: 'red',
      [BreakfastCategory.Sandwich]: 'green',
      [BreakfastCategory.Paratha]: 'gray',
      [BreakfastCategory.Idli]: 'blue',
      [BreakfastCategory.Dosa]: 'orange',
      [BreakfastCategory.Upma]: 'yellow',
      [BreakfastCategory.Poha]: 'purple',
      [BreakfastCategory.Beverage]: 'pink',
      [BreakfastCategory.Fruit]: 'red',
      [BreakfastCategory.Yogurt]: 'green',
      [BreakfastCategory.Smoothie]: 'gray',
      [BreakfastCategory.Other]: 'blue',
    },
  },
  SnackCategory: {
    enumObj: SnackCategory,
    colorMap: {
      [SnackCategory.Chips]: 'yellow',
      [SnackCategory.Samosa]: 'orange',
      [SnackCategory.Pakora]: 'green',
      [SnackCategory.Sandwich]: 'blue',
      [SnackCategory.Burger]: 'purple',
      [SnackCategory.Pizza]: 'red',
      [SnackCategory.Wrap]: 'pink',
      [SnackCategory.Chaat]: 'gray',
      [SnackCategory.Fries]: 'yellow',
      [SnackCategory.Nuts]: 'orange',
      [SnackCategory.Popcorn]: 'green',
      [SnackCategory.Cookies]: 'blue',
      [SnackCategory.Cake]: 'purple',
      [SnackCategory.Pastry]: 'red',
      [SnackCategory.Beverage]: 'pink',
      [SnackCategory.Other]: 'gray',
    },
  },
  Religion: {
    enumObj: Religion,
    colorMap: {
      [Religion.Hinduism]: 'orange',
      [Religion.Islam]: 'green',
      [Religion.Christianity]: 'blue',
      [Religion.Sikhism]: 'purple',
      [Religion.Buddhism]: 'yellow',
      [Religion.Jainism]: 'pink',
      [Religion.Zoroastrianism]: 'red',
      [Religion.Judaism]: 'gray',
      [Religion.Bahai]: 'blue',
      [Religion.Tribal]: 'orange',
      [Religion.Animism]: 'green',
      [Religion.Other]: 'gray',
    },
  },
  CasteCategory: {
    enumObj: CasteCategory,
    colorMap: {
      [CasteCategory.General]: 'blue',
      [CasteCategory.OBC]: 'green',
      [CasteCategory.SC]: 'orange',
      [CasteCategory.ST]: 'purple',
      [CasteCategory.EWS]: 'yellow',
      [CasteCategory.Other]: 'gray',
    },
  },
  AddressType: {
    enumObj: AddressType,
    colorMap: {
      [AddressType.Permanent]: 'blue',
      [AddressType.Current]: 'yellow',
      [AddressType.Residential]: 'green',
      [AddressType.Office]: 'orange',
      [AddressType.Billing]: 'purple',
      [AddressType.Shipping]: 'pink',
      [AddressType.Temporary]: 'red',
      [AddressType.Hostel]: 'gray',
      [AddressType.Other]: 'blue',
    },
  },
  BloodGroup: {
    enumObj: BloodGroup,
    colorMap: {
      [BloodGroup.APositive]: 'red',
      [BloodGroup.ANegative]: 'pink',
      [BloodGroup.BPositive]: 'blue',
      [BloodGroup.BNegative]: 'purple',
      [BloodGroup.OPositive]: 'green',
      [BloodGroup.ONegative]: 'yellow',
      [BloodGroup.ABPositive]: 'orange',
      [BloodGroup.ABNegative]: 'gray',
    },
  },
  DeviceType: {
    enumObj: DeviceType,
    colorMap: {
      [DeviceType.Phone]: 'blue',
      [DeviceType.Tablet]: 'green',
      [DeviceType.Desktop]: 'purple',
      [DeviceType.Laptop]: 'orange',
      [DeviceType.SmartTV]: 'yellow',
      [DeviceType.Wearable]: 'pink',
      [DeviceType.GameConsole]: 'red',
      [DeviceType.Other]: 'gray',
    },
  },
};

export const badges = Object.entries(enums).reduce(
  (acc, [key, { enumObj, colorMap }]) => {
    acc[`${key}Badge`] = createBadgeComponent(enumObj, colorMap, `${key}Badge`);
    return acc;
  },
  {} as Record<string, React.FC<any>>,
);

export const {
  MealStatusBadge,
  MealTypeBadge,
  ScheduleStatusBadge,
  ScheduleTypeBadge,
  MessStatusBadge,
  MenuCategoryBadge,
  UnitBadge,
  MenuTypeBadge,
  MealCategoryBadge,
  BreakfastCategoryBadge,
  SnackCategoryBadge,
  ReligionBadge,
  CasteCategoryBadge,
  AddressTypeBadge,
  BloodGroupBadge,
  DeviceTypeBadge,
  UserStatusBadge,
} = badges;
